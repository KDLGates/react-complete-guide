{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kristopher Gates\\\\Projects\\\\Udemy\\\\react-complete-guide\\\\projects\\\\expense-tracker\\\\src\\\\components\\\\Expenses\\\\ExpenseList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpenseList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExpenseList(props) {\n  _s();\n  const [filterYear, setFilterYear] = useState(new Date());\n  const setFilterYearHandler = year => {\n    console.log(\"In ExpenseList\");\n    console.log(`Filter Year updated to ${year}`);\n    setFilterYear(year);\n  };\n\n  // Filter props.expenses down to the year matching the ExpensesFilter's\n  const filteredExpenses = props.expenses.filter(expense => expense.date.getFullYear().toString() === filterYear);\n\n  // Produce both a default and a populated list of expenses JSX.\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found for the selected year.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 25\n  }, this);\n  if (filteredExpenses.length > 0) {\n    // Populate expensesContent as the list of ExpenseItems that match the filter year\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selectedYear: filterYear,\n        onFilterYearChange: setFilterYearHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ExpenseList, \"VRKko+yUhwKfe/Z/+RgNwtaBT+s=\");\n_c = ExpenseList;\nvar _c;\n$RefreshReg$(_c, \"ExpenseList\");","map":{"version":3,"names":["React","useState","Card","ExpensesFilter","ExpenseItem","ExpenseList","props","filterYear","setFilterYear","Date","setFilterYearHandler","year","console","log","filteredExpenses","expenses","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"sources":["C:/Users/Kristopher Gates/Projects/Udemy/react-complete-guide/projects/expense-tracker/src/components/Expenses/ExpenseList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpenseList.css\";\r\n\r\nexport default function ExpenseList(props) {\r\n  const [filterYear, setFilterYear] = useState(new Date());\r\n  const setFilterYearHandler = (year) => {\r\n    console.log(\"In ExpenseList\");\r\n    console.log(`Filter Year updated to ${year}`);\r\n    setFilterYear(year);\r\n  };\r\n\r\n  // Filter props.expenses down to the year matching the ExpensesFilter's\r\n  const filteredExpenses = props.expenses.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filterYear\r\n  );\r\n\r\n  // Produce both a default and a populated list of expenses JSX.\r\n  let expensesContent = <p>No expenses found for the selected year.</p>;\r\n  if (filteredExpenses.length > 0) {\r\n    // Populate expensesContent as the list of ExpenseItems that match the filter year\r\n    expensesContent = filteredExpenses.map((expense) => (\r\n      <ExpenseItem\r\n        key={expense.id}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selectedYear={filterYear}\r\n          onFilterYearChange={setFilterYearHandler}\r\n        />\r\n        {/* Lean version! ref. (66.) of the course for interesting short-circuit alternatives */}\r\n        {/* expensesContent is the list of ExpenseItems that match the filter year */}\r\n        {expensesContent}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,mBAAmB;AAAC;AAE3B,eAAe,SAASC,WAAW,CAACC,KAAK,EAAE;EAAA;EACzC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,EAAE,CAAC;EACxD,MAAMC,oBAAoB,GAAIC,IAAI,IAAK;IACrCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BD,OAAO,CAACC,GAAG,CAAE,0BAAyBF,IAAK,EAAC,CAAC;IAC7CH,aAAa,CAACG,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAMG,gBAAgB,GAAGR,KAAK,CAACS,QAAQ,CAACC,MAAM,CAC3CC,OAAO,IAAKA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKb,UAAU,CAClE;;EAED;EACA,IAAIc,eAAe,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAA+C;EACrE,IAAIP,gBAAgB,CAACQ,MAAM,GAAG,CAAC,EAAE;IAC/B;IACAD,eAAe,GAAGP,gBAAgB,CAACS,GAAG,CAAEN,OAAO,iBAC7C,QAAC,WAAW;MAEV,KAAK,EAAEA,OAAO,CAACO,KAAM;MACrB,MAAM,EAAEP,OAAO,CAACQ,MAAO;MACvB,IAAI,EAAER,OAAO,CAACC;IAAK,GAHdD,OAAO,CAACS,EAAE;MAAA;MAAA;MAAA;IAAA,QAKlB,CAAC;EACJ;EAEA,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,SAAS,EAAC,UAAU;MAAA,wBACxB,QAAC,cAAc;QACb,YAAY,EAAEnB,UAAW;QACzB,kBAAkB,EAAEG;MAAqB;QAAA;QAAA;QAAA;MAAA,QACzC,EAGDW,eAAe;IAAA;MAAA;MAAA;MAAA;IAAA;EACX;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAxCuBhB,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}